var last_24h_mean = batch
    |query('''
            SELECT mean("twoway_delay_avg") AS mean
            FROM "latency_prod"."default".latency
           ''')
        .period(1d)
        .every(10m)
        .groupBy(*)
        .align()
    |shift(1d)  // is this needed?

var last_24h_stddev = batch
    |query('''
            SELECT stddev("twoway_delay_avg") AS stddev
            FROM "latency_prod"."default".latency
           ''')
        .period(1d)
        .every(10m)
        .groupBy(*)
        .align()
    |shift(1d)  // is this needed?

var last_value = batch
    |query('''
            SELECT last("twoway_delay_avg")
            FROM "latency_prod"."default".latency
           ''')
        .period(1d)
        .every(10m)
        .groupBy(*)
        .align()

last_24h_mean
    |join(last_24h_stddev, last_value)
        .as('mean', 'stddev', 'last_value')
        .on('site', 'paa')
        .tolerance(10m)
    |eval(lambda: "last_value.last",
          lambda: "mean.mean",
          lambda: "stddev.stddev",
          lambda: "last_value.last" - "mean.mean" - 2 * "stddev.stddev")
        .as('last_value_last',
            'mean',
            'stddev',
            'diff')
    |alert()
        .crit(lambda: "diff" > 0)
        .log('/tmp/alerts.log')


        SELECT stddev("duration") AS durationstd from "asgbackup"."autogen"."drive_info" WHERE target='"last_target"'


        !1280;!1281;!1282;!1288


var data = stream
  |from().measurement('system').groupBy('host')
  |stats(200ms).align()
  |difference('emitted').as('emitted')

var data_crit = data
  |window().period(500ms).every(1u)
  |sum('emitted').as('emittedsum')

data
  |join(data_crit).as('warn','crit').tolerance(200ms).fill(0)
  |log()



  last_value
    |join(last_24h_stddev)
        .as('durationstd', 'last_value')
    |eval(lambda: "last_value.last_target","last_24h_stddev.durationstd")
        .as('last_value_target','durationstd')
    |alert()
        .message('Last value: {{ index .Fields "last_value_target" }}, Last deviation: {{ index .Fields "durationstd" }}')
        .crit(lambda: TRUE)
        .slack()
        .log('/var/tmp/kapacitor/files.log')


SELECT stddev("duration") AS durationstd from "asgbackup"."autogen"."drive_info" WHERE target='Mysqltest8'


SELECT stddev("duration") AS durationstd from "asgbackup"."autogen"."drive_info" GROUP BY target

GROUP BY target

  1 var last_value = batch
  2     |query(''' select target as last_target,bytes from "asgbackup"."autogen"."drive_info" LIMIT 1 ''')
  3         .period(30d)
  4         .every(1m)
  5     |eval(lambda: "last_target").as('last_value_last')
  6
  7 var last_24h_stddev = last_value
  8     |query('''
  9          SELECT stddev("duration") AS durationstd
 10          FROM "asgbackup"."autogen"."drive_info"
 11          WHERE target='last_value_last'
 12          ''')
 13         .period(30d)
 14         .every(1m)
 15         .groupBy('target')
 16     |eval(lambda: "durationstd").as('durationstd')
 17     |alert()
 18         .message('Last value: {{ index .Fields "last_value_last" }}, Last deviation: {{ index .Fields "durationstd" }}')
 19         .crit(lambda: TRUE)
